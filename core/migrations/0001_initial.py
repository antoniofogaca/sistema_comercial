# Generated by Django 5.2.3 on 2025-06-20 15:33

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_cat', models.CharField(max_length=20, unique=True, verbose_name='Código da Categoria')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Cest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd_cest', models.CharField(help_text='Código Especificador da Substituição Tributária (9 dígitos).', max_length=9, unique=True, verbose_name='Código CEST')),
                ('descricao', models.CharField(help_text='Descrição detalhada do CEST.', max_length=900, verbose_name='Descrição')),
                ('cd_ncm', models.CharField(blank=True, help_text='Código Nomenclatura Comum do Mercosul associado (opcional).', max_length=300, null=True, verbose_name='Código NCM')),
                ('cancelado', models.BooleanField(default=False, help_text='Indica se o CEST está desativado/cancelado.', verbose_name='Cancelado')),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'CEST',
                'verbose_name_plural': 'CESTs',
                'ordering': ['cd_cest'],
            },
        ),
        migrations.CreateModel(
            name='Cfop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cfop', models.CharField(help_text='Código Fiscal de Operações e Prestações (4 dígitos).', max_length=4, unique=True, verbose_name='CFOP')),
                ('categoria', models.CharField(help_text='Categoria do CFOP (ex: Entradas, Saídas).', max_length=800, verbose_name='Categoria')),
                ('descricao', models.CharField(help_text='Descrição detalhada do CFOP.', max_length=900, verbose_name='Descrição')),
                ('cancelado', models.BooleanField(default=False, help_text='Indica se o CFOP está desativado/cancelado.', verbose_name='Cancelado')),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'CFOP',
                'verbose_name_plural': 'CFOPs',
                'ordering': ['cfop'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_interno', models.CharField(max_length=20, unique=True)),
                ('matricula', models.CharField(blank=True, max_length=20, null=True)),
                ('cancelado', models.BooleanField(default=False)),
                ('nome_completo', models.CharField(max_length=150)),
                ('cpf_cnpj', models.CharField(max_length=18, unique=True)),
                ('rg', models.CharField(blank=True, max_length=20, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('logradouro', models.CharField(blank=True, max_length=200, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('cidade', models.CharField(max_length=100)),
                ('uf', models.CharField(max_length=2)),
                ('salario', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('percentual', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('saldo', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='CstCson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd_cst_cson', models.CharField(help_text='Código de Situação Tributária ou Código de Situação da Operação do Simples Nacional (3 dígitos).', max_length=3, unique=True, verbose_name='Código CST/CSOSN')),
                ('descricao', models.CharField(help_text='Descrição detalhada do CST/CSOSN.', max_length=600, verbose_name='Descrição')),
                ('cd_regime_trib', models.CharField(help_text='Código do Regime Tributário (ex: 1=Simples Nacional, 3=Regime Normal).', max_length=1, verbose_name='Regime Tributário')),
                ('cancelado', models.BooleanField(default=False, help_text='Indica se o CST/CSOSN está desativado/cancelado.', verbose_name='Cancelado')),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'CST/CSOSN',
                'verbose_name_plural': 'CSTs/CSOSNs',
                'ordering': ['cd_cst_cson'],
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_loja', models.CharField(max_length=50, unique=True, verbose_name='Código da Loja')),
                ('cnpj', models.CharField(max_length=18, unique=True, validators=[django.core.validators.MinLengthValidator(14)], verbose_name='CNPJ')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('porte', models.CharField(blank=True, choices=[('MEI', 'Microempreendedor Individual (MEI)'), ('ME', 'Microempresa (ME)'), ('EPP', 'Empresa de Pequeno Porte (EPP)'), ('Outros', 'Outros')], max_length=10, null=True, verbose_name='Porte')),
                ('situacao', models.CharField(choices=[('Ativa', 'Ativa'), ('Inativa', 'Inativa'), ('Suspensa', 'Suspensa'), ('Baixada', 'Baixada')], default='Ativa', max_length=10, verbose_name='Situação')),
                ('data_abertura', models.DateField(blank=True, null=True, verbose_name='Data de Abertura')),
                ('nome_empresa', models.CharField(max_length=255, verbose_name='Nome da Empresa')),
                ('razao_social', models.CharField(max_length=255, unique=True, verbose_name='Razão Social')),
                ('fantasia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome Fantasia')),
                ('contato', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Contato')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail')),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro')),
                ('numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('cep', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('cnae_principal', models.CharField(blank=True, max_length=100, null=True, verbose_name='CNAE Principal')),
                ('aliquota_simples', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Alíquota do Simples')),
                ('codigo_regime_tributario', models.CharField(choices=[('1', 'Simples Nacional'), ('2', 'Simples Nacional – excesso de sublimite de receita bruta'), ('3', 'Regime Normal (Empresas modalidade Geral)')], default='1', max_length=1, verbose_name='Código de Regime Tributário (CRT)')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'ordering': ['fantasia', 'razao_social'],
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código do Grupo')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Grupo',
                'verbose_name_plural': 'Grupos',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Ncm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ncm', models.CharField(help_text='Código NCM (Nomenclatura Comum do Mercosul).', max_length=10, unique=True, verbose_name='NCM')),
                ('descricao', models.CharField(help_text='Descrição detalhada do NCM.', max_length=300, verbose_name='Descrição')),
                ('inicio_vigencia', models.DateField(blank=True, help_text='Data de início da validade do NCM.', null=True, verbose_name='Início da Vigência')),
                ('fim_vigencia', models.DateField(blank=True, help_text='Data de fim da validade do NCM.', null=True, verbose_name='Fim da Vigência')),
                ('ano', models.CharField(blank=True, help_text='Ano de referência do NCM.', max_length=4, null=True, verbose_name='Ano')),
                ('numero', models.CharField(blank=True, help_text='Número de identificação do NCM.', max_length=10, null=True, verbose_name='Número')),
                ('cancelado', models.BooleanField(default=False, help_text='Indica se o NCM está cancelado.', verbose_name='Cancelado')),
                ('segmento', models.CharField(blank=True, help_text='Segmento de mercado relacionado ao NCM.', max_length=100, null=True, verbose_name='Segmento')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'NCM',
                'verbose_name_plural': 'NCMs',
                'ordering': ['ncm'],
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código do Setor')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='SubGrupo',
            fields=[
                ('id_sub_grupo', models.SmallAutoField(db_column='ID_SUB_GRUPO', primary_key=True, serialize=False)),
                ('nome_sub_grupo', models.CharField(db_column='NOME_SUB_GRUPO', max_length=50)),
                ('status', models.CharField(choices=[('A', 'Ativo'), ('C', 'Cancelado')], db_column='STATUS', default='A', max_length=1)),
                ('id_grupo', models.ForeignKey(db_column='ID_GRUPO', on_delete=django.db.models.deletion.CASCADE, to='core.grupo')),
            ],
            options={
                'verbose_name': 'Sub Grupo',
                'verbose_name_plural': 'Sub Grupos',
                'db_table': 'SUB_GRUPO',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_ean_dun', models.CharField(max_length=50, unique=True, verbose_name='Código EAN/DUN')),
                ('descricao_produto', models.CharField(max_length=255, verbose_name='Descrição Produto (Nome - Marca - Modelo - Peso)')),
                ('descricao_pdv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição Produto PDV')),
                ('unidade_venda', models.CharField(choices=[('UN', 'Unidade'), ('KG', 'Quilograma'), ('LT', 'Litro'), ('MT', 'Metro'), ('PC', 'Peça')], max_length=2, verbose_name='Unidade Venda')),
                ('qtd_por_embalagem', models.DecimalField(decimal_places=3, default=1.0, max_digits=10, verbose_name='Qtd Por Embalagem')),
                ('tipo_produto', models.CharField(choices=[('V', 'Venda'), ('S', 'Serviço')], default='V', max_length=1, verbose_name='Tipo de Produto')),
                ('peso', models.BooleanField(default=False, verbose_name='Peso')),
                ('pode_multiplicar', models.BooleanField(default=False, verbose_name='Pode Multiplicar')),
                ('uso_consumo', models.BooleanField(default=False, verbose_name='Uso/Consumo')),
                ('situacao', models.CharField(choices=[('A', 'Ativo'), ('I', 'Inativo')], default='A', max_length=1, verbose_name='Situação')),
                ('percentual_icms_venda', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='%ICMS Venda')),
                ('estoque_atual', models.DecimalField(decimal_places=3, default=0.0, max_digits=10, verbose_name='Estoque Atual')),
                ('peso_liquido', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Peso Líquido')),
                ('peso_bruto', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Peso Bruto')),
                ('valor_venda', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Venda')),
                ('classificacao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Classificação')),
                ('tipo_tributacao', models.CharField(choices=[('T', 'Tributado'), ('I', 'Isento'), ('F', 'Não Tributado')], max_length=1, verbose_name='Tipo de Tributação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('id_cest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cest', verbose_name='CEST')),
                ('id_cfop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cfop', verbose_name='CFOP')),
                ('id_cstcson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cstcson', verbose_name='CST/CSOSN')),
                ('id_grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.grupo', verbose_name='Grupo')),
                ('id_ncm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ncm', verbose_name='NCM')),
                ('id_setor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.setor', verbose_name='Setor')),
                ('id_sub_grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.subgrupo', verbose_name='Sub-Grupo')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['descricao_produto'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_nivel', models.CharField(choices=[('Admin', 'Administrador'), ('Gerente', 'Gerente'), ('Operador', 'Operador'), ('Visualizador', 'Visualizador')], max_length=20, verbose_name='Nível de Acesso')),
                ('id_permissao', models.CharField(choices=[('Total', 'Acesso Total'), ('Parcial', 'Acesso Parcial'), ('Nenhum', 'Nenhum Acesso')], max_length=20, verbose_name='Permissão de Acesso')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('usuario', models.CharField(max_length=100, unique=True, verbose_name='Nome de Usuário')),
                ('senha', models.CharField(max_length=128, verbose_name='Senha')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('id_loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.empresa', verbose_name='Loja Associada')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['nome'],
            },
        ),
    ]
